// Generated by CoffeeScript 1.3.3
var Bomb,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Bomb = (function(_super) {

  __extends(Bomb, _super);

  function Bomb(map, player) {
    this.map = map;
    this.player = player;
    this.olderBy = __bind(this.olderBy, this);

    Bomb.__super__.constructor.call(this, this.map);
    this.setSize(0.6);
    this.moveBy(this.player.square.left, this.player.square.top);
    this.representation = new ObjectView(this);
  }

  Bomb.prototype.olderBy = function(timeDelta) {
    return this.update();
  };

  Bomb.prototype.update = function() {
    this.representation.state = ['bomb'];
    return this.representation.update();
  };

  Bomb.prototype.intersectsWith = function(object) {
    console.log('int with bo');
    return this.player !== object && Bomb.__super__.intersectsWith.call(this, object);
  };

  return Bomb;

})(SquaredObject);
