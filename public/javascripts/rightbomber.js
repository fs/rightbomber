// Generated by CoffeeScript 1.3.3
var Rightbomber,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Rightbomber = (function() {

  function Rightbomber() {
    this.tick = __bind(this.tick, this);

    this.run = __bind(this.run, this);

  }

  Rightbomber.prototype.keyMap = {
    d: 'right',
    w: 'up',
    a: 'left',
    s: 'down'
  };

  Rightbomber.prototype.run = function() {
    var gameLoop;
    this.map = new Map(30, 20);
    this.map.generate();
    (new MapView(this.map)).update();
    this.keyboard = new Keyboard;
    this.player = new Player(this.map);
    this.player2 = new Player(this.map);
    this.player2.moveBy(2, 2);
    this.player2.update();
    gameLoop = new GameLoop(this.tick);
    return gameLoop.run();
  };

  Rightbomber.prototype.tick = function(timeDelta) {
    var direction, object, _i, _len, _ref, _results;
    if (this.keyboard.isKeyPressed('/')) {
      this.player.plantBomb();
    }
    direction = this.keyboard.latestOf(['right', 'up', 'left', 'down']);
    if ((this.player.moving = !!direction)) {
      this.player.face(direction);
    }
    direction = this.keyMap[this.keyboard.latestOf(['d', 'w', 's', 'a'])];
    if ((this.player2.moving = !!direction)) {
      this.player2.face(direction);
    }
    _ref = this.map.objects;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      object = _ref[_i];
      _results.push(object.olderBy(timeDelta));
    }
    return _results;
  };

  return Rightbomber;

})();
