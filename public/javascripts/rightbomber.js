// Generated by CoffeeScript 1.3.3
var Rightbomber,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Rightbomber = (function() {

  function Rightbomber() {
    this.tick = __bind(this.tick, this);

    this.run = __bind(this.run, this);
    console.log('init');
  }

  Rightbomber.prototype.run = function() {
    var gameLoop, map, mapView, table;
    console.log('run');
    map = new Map;
    map.generate();
    mapView = new MapView(map);
    table = mapView.render();
    $(document.body).append(table);
    this.keyboard = new Keyboard;
    this.keyboard.activate();
    this.player = new Player(map);
    this.player2 = new Player(map);
    this.bombs = [];
    gameLoop = new GameLoop(this.tick);
    return gameLoop.run();
  };

  Rightbomber.prototype.tick = function(timeDelta) {
    var bomb, direction, key, _i, _j, _len, _len1, _ref, _ref1, _ref2;
    this.player.moving = false;
    _ref = ['right', 'up', 'left', 'down'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      direction = _ref[_i];
      if (this.keyboard.keys[direction]) {
        this.player.moving = true;
        this.player.direction = direction;
      }
    }
    if (this.keyboard.keys['/']) {
      this.bombs.push(this.player.placeBomb());
    }
    _ref1 = this.bombs;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      bomb = _ref1[_j];
      bomb.move(timeDelta);
    }
    this.player.move(timeDelta);
    this.player2.moving = false;
    _ref2 = {
      d: 'right',
      w: 'up',
      a: 'left',
      s: 'down'
    };
    for (key in _ref2) {
      direction = _ref2[key];
      if (this.keyboard.keys[key]) {
        this.player2.moving = true;
        this.player2.direction = direction;
      }
    }
    return this.player2.move(timeDelta);
  };

  return Rightbomber;

})();
