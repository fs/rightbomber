// Generated by CoffeeScript 1.3.3
var ObjectView,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ObjectView = (function(_super) {

  __extends(ObjectView, _super);

  ObjectView.prototype.state = null;

  ObjectView.prototype.square = null;

  function ObjectView(square) {
    this.square = square;
    this.update = __bind(this.update, this);

  }

  ObjectView.prototype.update = function() {
    var element, size, x, y;
    element = this.getElement();
    x = Math.round(this.tileSize * this.square.position.x);
    y = Math.round(this.tileSize * this.square.position.y);
    size = Math.round(this.tileSize * this.square.size);
    element.attr({
      "class": this.state.join(' ')
    });
    return element.css({
      left: x + 'px',
      top: y + 'px',
      width: size + 'px',
      height: size + 'px'
    });
  };

  return ObjectView;

})(BaseView);
