// Generated by CoffeeScript 1.3.3
var Map,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Map = (function(_super) {

  __extends(Map, _super);

  Map.prototype.width = 10;

  Map.prototype.height = 10;

  function Map(width, height) {
    this.width = width;
    this.height = height;
    this.setWidth(this.width);
    this.setHeight(this.height);
    this.objects = [];
  }

  Map.prototype.generate = function(options) {
    if (options == null) {
      options = {};
    }
    this.initCells();
    return this.generateTerrain();
  };

  Map.prototype.getCell = function(x, y) {
    var cell;
    cell = this.cells[this.constrain(x, this.width - 1)][this.constrain(y, this.height - 1)];
    cell.objects = this.objects;
    return cell;
  };

  Map.prototype.constrain = function(coordinate, max) {
    return Math.max(0, Math.min(max, Math.floor(coordinate)));
  };

  Map.prototype.initCells = function() {
    var column, x, y, _i, _ref, _results;
    this.cells = [];
    _results = [];
    for (x = _i = 0, _ref = this.width; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {
      this.cells[x] = column = new Array(this.height);
      _results.push((function() {
        var _j, _ref1, _results1;
        _results1 = [];
        for (y = _j = 0, _ref1 = this.height; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; y = 0 <= _ref1 ? ++_j : --_j) {
          _results1.push(column[y] = new Cell(x, y));
        }
        return _results1;
      }).call(this));
    }
    return _results;
  };

  Map.prototype.generateTerrain = function() {
    var x, y, _i, _ref, _results;
    _results = [];
    for (x = _i = 0, _ref = this.width; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {
      _results.push((function() {
        var _j, _ref1, _results1;
        _results1 = [];
        for (y = _j = 0, _ref1 = this.height; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; y = 0 <= _ref1 ? ++_j : --_j) {
          if ((x % 4 === 3 || y % 4 === 3) && Math.random() < 0.25) {
            _results1.push(this.getCell(x, y).passable = false);
          } else {
            _results1.push(void 0);
          }
        }
        return _results1;
      }).call(this));
    }
    return _results;
  };

  return Map;

})(Rect);
